// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using linkup_ms.Data;

#nullable disable

namespace linkup_ms.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20240910022845_InitialSeeders")]
    partial class InitialSeeders
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("linkup_ms.Models.Coder", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("Birthday")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("ClanName")
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)");

                    b.Property<string>("Description")
                        .HasMaxLength(500)
                        .HasColumnType("character varying(500)");

                    b.Property<int>("GenderId")
                        .HasColumnType("integer");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<string>("UrlImage")
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)");

                    b.HasKey("Id");

                    b.HasIndex("GenderId");

                    b.ToTable("Coders");
                });

            modelBuilder.Entity("linkup_ms.Models.CoderLanguageLevel", b =>
                {
                    b.Property<int>("CoderId")
                        .HasColumnType("integer");

                    b.Property<int>("LanguageLevelId")
                        .HasColumnType("integer");

                    b.HasKey("CoderId", "LanguageLevelId");

                    b.HasIndex("LanguageLevelId");

                    b.ToTable("CoderLanguageLevels");

                    b.HasData(
                        new
                        {
                            CoderId = 1,
                            LanguageLevelId = 1
                        },
                        new
                        {
                            CoderId = 2,
                            LanguageLevelId = 3
                        },
                        new
                        {
                            CoderId = 3,
                            LanguageLevelId = 2
                        },
                        new
                        {
                            CoderId = 4,
                            LanguageLevelId = 4
                        },
                        new
                        {
                            CoderId = 5,
                            LanguageLevelId = 5
                        },
                        new
                        {
                            CoderId = 6,
                            LanguageLevelId = 2
                        },
                        new
                        {
                            CoderId = 7,
                            LanguageLevelId = 3
                        },
                        new
                        {
                            CoderId = 8,
                            LanguageLevelId = 4
                        },
                        new
                        {
                            CoderId = 9,
                            LanguageLevelId = 6
                        },
                        new
                        {
                            CoderId = 10,
                            LanguageLevelId = 3
                        });
                });

            modelBuilder.Entity("linkup_ms.Models.CoderSoftSkill", b =>
                {
                    b.Property<int>("CoderId")
                        .HasColumnType("integer");

                    b.Property<int>("SoftSkillId")
                        .HasColumnType("integer");

                    b.HasKey("CoderId", "SoftSkillId");

                    b.HasIndex("SoftSkillId");

                    b.ToTable("CoderSoftSkills");

                    b.HasData(
                        new
                        {
                            CoderId = 1,
                            SoftSkillId = 1
                        },
                        new
                        {
                            CoderId = 2,
                            SoftSkillId = 2
                        },
                        new
                        {
                            CoderId = 3,
                            SoftSkillId = 3
                        },
                        new
                        {
                            CoderId = 4,
                            SoftSkillId = 4
                        },
                        new
                        {
                            CoderId = 5,
                            SoftSkillId = 5
                        },
                        new
                        {
                            CoderId = 6,
                            SoftSkillId = 6
                        },
                        new
                        {
                            CoderId = 7,
                            SoftSkillId = 7
                        },
                        new
                        {
                            CoderId = 8,
                            SoftSkillId = 8
                        },
                        new
                        {
                            CoderId = 9,
                            SoftSkillId = 9
                        },
                        new
                        {
                            CoderId = 10,
                            SoftSkillId = 10
                        });
                });

            modelBuilder.Entity("linkup_ms.Models.CoderTechnicalSkillLevel", b =>
                {
                    b.Property<int>("CoderId")
                        .HasColumnType("integer");

                    b.Property<int>("TechnicalSkillLevelId")
                        .HasColumnType("integer");

                    b.HasKey("CoderId", "TechnicalSkillLevelId");

                    b.HasIndex("TechnicalSkillLevelId");

                    b.ToTable("CoderTechnicalSkillLevels");

                    b.HasData(
                        new
                        {
                            CoderId = 1,
                            TechnicalSkillLevelId = 1
                        },
                        new
                        {
                            CoderId = 2,
                            TechnicalSkillLevelId = 3
                        },
                        new
                        {
                            CoderId = 3,
                            TechnicalSkillLevelId = 2
                        },
                        new
                        {
                            CoderId = 4,
                            TechnicalSkillLevelId = 1
                        },
                        new
                        {
                            CoderId = 5,
                            TechnicalSkillLevelId = 3
                        },
                        new
                        {
                            CoderId = 6,
                            TechnicalSkillLevelId = 2
                        },
                        new
                        {
                            CoderId = 7,
                            TechnicalSkillLevelId = 3
                        },
                        new
                        {
                            CoderId = 8,
                            TechnicalSkillLevelId = 1
                        },
                        new
                        {
                            CoderId = 9,
                            TechnicalSkillLevelId = 1
                        },
                        new
                        {
                            CoderId = 10,
                            TechnicalSkillLevelId = 3
                        });
                });

            modelBuilder.Entity("linkup_ms.Models.Gender", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.HasKey("Id");

                    b.ToTable("Genders");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "masculino"
                        },
                        new
                        {
                            Id = 2,
                            Name = "femenino"
                        },
                        new
                        {
                            Id = 3,
                            Name = "prefiero no indicarlo"
                        });
                });

            modelBuilder.Entity("linkup_ms.Models.Language", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.HasKey("Id");

                    b.ToTable("Languages");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "inglés"
                        },
                        new
                        {
                            Id = 2,
                            Name = "español"
                        },
                        new
                        {
                            Id = 3,
                            Name = "francés"
                        },
                        new
                        {
                            Id = 4,
                            Name = "alemán"
                        },
                        new
                        {
                            Id = 5,
                            Name = "chino"
                        });
                });

            modelBuilder.Entity("linkup_ms.Models.LanguageLevel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("LanguageId")
                        .HasColumnType("integer");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.HasKey("Id");

                    b.HasIndex("LanguageId");

                    b.ToTable("LanguageLevels");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            LanguageId = 1,
                            Name = "a1"
                        },
                        new
                        {
                            Id = 2,
                            LanguageId = 2,
                            Name = "a2"
                        },
                        new
                        {
                            Id = 3,
                            LanguageId = 3,
                            Name = "b1"
                        },
                        new
                        {
                            Id = 4,
                            LanguageId = 4,
                            Name = "b2"
                        },
                        new
                        {
                            Id = 5,
                            LanguageId = 5,
                            Name = "c1"
                        },
                        new
                        {
                            Id = 6,
                            LanguageId = 1,
                            Name = "c2"
                        });
                });

            modelBuilder.Entity("linkup_ms.Models.Sector", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.HasKey("Id");

                    b.ToTable("Sector");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "tecnología"
                        },
                        new
                        {
                            Id = 2,
                            Name = "finanzas"
                        },
                        new
                        {
                            Id = 3,
                            Name = "salud"
                        },
                        new
                        {
                            Id = 4,
                            Name = "educación"
                        },
                        new
                        {
                            Id = 5,
                            Name = "manufactura"
                        });
                });

            modelBuilder.Entity("linkup_ms.Models.SoftSkill", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.HasKey("Id");

                    b.ToTable("SoftSkills");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "comunicación"
                        },
                        new
                        {
                            Id = 2,
                            Name = "trabajo en equipo"
                        },
                        new
                        {
                            Id = 3,
                            Name = "resolución de problemas"
                        },
                        new
                        {
                            Id = 4,
                            Name = "adaptabilidad"
                        },
                        new
                        {
                            Id = 5,
                            Name = "creatividad"
                        },
                        new
                        {
                            Id = 6,
                            Name = "gestión del tiempo"
                        },
                        new
                        {
                            Id = 7,
                            Name = "liderazgo"
                        },
                        new
                        {
                            Id = 8,
                            Name = "inteligencia emocional"
                        },
                        new
                        {
                            Id = 9,
                            Name = "pensamiento crítico"
                        },
                        new
                        {
                            Id = 10,
                            Name = "resolución de conflictos"
                        });
                });

            modelBuilder.Entity("linkup_ms.Models.TechnicalSkill", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.HasKey("Id");

                    b.ToTable("TechnicalSkills");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "javaScript"
                        },
                        new
                        {
                            Id = 2,
                            Name = "python"
                        },
                        new
                        {
                            Id = 3,
                            Name = "java"
                        },
                        new
                        {
                            Id = 4,
                            Name = "c#"
                        },
                        new
                        {
                            Id = 5,
                            Name = "sql"
                        },
                        new
                        {
                            Id = 6,
                            Name = "nextJs"
                        },
                        new
                        {
                            Id = 7,
                            Name = "nodeJs"
                        },
                        new
                        {
                            Id = 8,
                            Name = "docker"
                        },
                        new
                        {
                            Id = 9,
                            Name = "aws"
                        },
                        new
                        {
                            Id = 10,
                            Name = "machine learning"
                        });
                });

            modelBuilder.Entity("linkup_ms.Models.TechnicalSkillLevel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.Property<int>("TechnicalSkillId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("TechnicalSkillId");

                    b.ToTable("TechnicalSkillLevels");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "junior",
                            TechnicalSkillId = 1
                        },
                        new
                        {
                            Id = 2,
                            Name = "semi-senior",
                            TechnicalSkillId = 2
                        },
                        new
                        {
                            Id = 3,
                            Name = "senior",
                            TechnicalSkillId = 3
                        });
                });

            modelBuilder.Entity("linkup_ms.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<bool>("IsConfirmed")
                        .HasColumnType("boolean");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("text");

                    b.Property<int>("RoleId")
                        .HasColumnType("integer");

                    b.Property<int>("SectorId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.HasIndex("SectorId");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedAt = new DateTime(2024, 2, 15, 1, 17, 51, 0, DateTimeKind.Utc),
                            Email = "jackeline.cardona@example.com",
                            IsConfirmed = true,
                            Name = "jackeline cardona",
                            Password = "riwi123",
                            PhoneNumber = "1234567890",
                            RoleId = 1,
                            SectorId = 1
                        },
                        new
                        {
                            Id = 2,
                            CreatedAt = new DateTime(2024, 3, 10, 1, 17, 51, 0, DateTimeKind.Utc),
                            Email = "jane.smith@example.com",
                            IsConfirmed = true,
                            Name = "jane smith",
                            Password = "riwi123",
                            PhoneNumber = "2345678901",
                            RoleId = 2,
                            SectorId = 2
                        },
                        new
                        {
                            Id = 3,
                            CreatedAt = new DateTime(2024, 4, 5, 1, 17, 51, 0, DateTimeKind.Utc),
                            Email = "alice.johnson@example.com",
                            IsConfirmed = true,
                            Name = "alice johnson",
                            Password = "riwi123",
                            PhoneNumber = "3456789012",
                            RoleId = 2,
                            SectorId = 4
                        },
                        new
                        {
                            Id = 4,
                            CreatedAt = new DateTime(2024, 5, 20, 1, 17, 51, 0, DateTimeKind.Utc),
                            Email = "bob.williams@example.com",
                            IsConfirmed = true,
                            Name = "bob williams",
                            Password = "riwi123",
                            PhoneNumber = "4567890123",
                            RoleId = 2,
                            SectorId = 3
                        },
                        new
                        {
                            Id = 5,
                            CreatedAt = new DateTime(2024, 6, 25, 1, 17, 51, 0, DateTimeKind.Utc),
                            Email = "charlie.brown@example.com",
                            IsConfirmed = true,
                            Name = "charlie brown",
                            Password = "riwi123",
                            PhoneNumber = "5678901234",
                            RoleId = 2,
                            SectorId = 2
                        },
                        new
                        {
                            Id = 6,
                            CreatedAt = new DateTime(2024, 7, 10, 1, 17, 51, 0, DateTimeKind.Utc),
                            Email = "diana.clark@example.com",
                            IsConfirmed = true,
                            Name = "diana clark",
                            Password = "riwi123",
                            PhoneNumber = "6789012345",
                            RoleId = 2,
                            SectorId = 1
                        },
                        new
                        {
                            Id = 7,
                            CreatedAt = new DateTime(2024, 8, 15, 1, 17, 51, 0, DateTimeKind.Utc),
                            Email = "edward.davis@example.com",
                            IsConfirmed = true,
                            Name = "edward davis",
                            Password = "riwi123",
                            PhoneNumber = "7890123456",
                            RoleId = 2,
                            SectorId = 5
                        },
                        new
                        {
                            Id = 8,
                            CreatedAt = new DateTime(2024, 9, 10, 1, 17, 51, 0, DateTimeKind.Utc),
                            Email = "fiona.evans@example.com",
                            IsConfirmed = true,
                            Name = "fiona evans",
                            Password = "riwi123",
                            PhoneNumber = "8901234567",
                            RoleId = 2,
                            SectorId = 2
                        },
                        new
                        {
                            Id = 9,
                            CreatedAt = new DateTime(2024, 10, 5, 1, 17, 51, 0, DateTimeKind.Utc),
                            Email = "george.fisher@example.com",
                            IsConfirmed = true,
                            Name = "george fisher",
                            Password = "riwi123",
                            PhoneNumber = "9012345678",
                            RoleId = 2,
                            SectorId = 5
                        },
                        new
                        {
                            Id = 10,
                            CreatedAt = new DateTime(2024, 11, 1, 1, 17, 51, 0, DateTimeKind.Utc),
                            Email = "hannah.green@example.com",
                            IsConfirmed = true,
                            Name = "hannah green",
                            Password = "riwi123",
                            PhoneNumber = "0123456789",
                            RoleId = 2,
                            SectorId = 3
                        });
                });

            modelBuilder.Entity("linkup_ms.Models.UserRole", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.HasKey("Id");

                    b.ToTable("UserRole");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "administrador"
                        },
                        new
                        {
                            Id = 2,
                            Name = "cliente"
                        });
                });

            modelBuilder.Entity("linkup_ms.Models.Coder", b =>
                {
                    b.HasOne("linkup_ms.Models.Gender", "Gender")
                        .WithMany("Coders")
                        .HasForeignKey("GenderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Gender");
                });

            modelBuilder.Entity("linkup_ms.Models.CoderLanguageLevel", b =>
                {
                    b.HasOne("linkup_ms.Models.Coder", "Coder")
                        .WithMany("CoderLanguageLevels")
                        .HasForeignKey("CoderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("linkup_ms.Models.LanguageLevel", "LanguageLevel")
                        .WithMany("CoderLanguageLevels")
                        .HasForeignKey("LanguageLevelId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Coder");

                    b.Navigation("LanguageLevel");
                });

            modelBuilder.Entity("linkup_ms.Models.CoderSoftSkill", b =>
                {
                    b.HasOne("linkup_ms.Models.Coder", "Coder")
                        .WithMany("CoderSoftSkills")
                        .HasForeignKey("CoderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("linkup_ms.Models.SoftSkill", "SoftSkill")
                        .WithMany("CoderSoftSkills")
                        .HasForeignKey("SoftSkillId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Coder");

                    b.Navigation("SoftSkill");
                });

            modelBuilder.Entity("linkup_ms.Models.CoderTechnicalSkillLevel", b =>
                {
                    b.HasOne("linkup_ms.Models.Coder", "Coder")
                        .WithMany("CoderTechnicalSkillLevels")
                        .HasForeignKey("CoderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("linkup_ms.Models.TechnicalSkillLevel", "TechnicalSkillLevel")
                        .WithMany("CoderTechnicalSkillLevels")
                        .HasForeignKey("TechnicalSkillLevelId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Coder");

                    b.Navigation("TechnicalSkillLevel");
                });

            modelBuilder.Entity("linkup_ms.Models.LanguageLevel", b =>
                {
                    b.HasOne("linkup_ms.Models.Language", "Language")
                        .WithMany("LanguageLevels")
                        .HasForeignKey("LanguageId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Language");
                });

            modelBuilder.Entity("linkup_ms.Models.TechnicalSkillLevel", b =>
                {
                    b.HasOne("linkup_ms.Models.TechnicalSkill", "TechnicalSkill")
                        .WithMany("TechnicalSkillLevels")
                        .HasForeignKey("TechnicalSkillId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("TechnicalSkill");
                });

            modelBuilder.Entity("linkup_ms.Models.User", b =>
                {
                    b.HasOne("linkup_ms.Models.UserRole", "Role")
                        .WithMany("Users")
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("linkup_ms.Models.Sector", "Sector")
                        .WithMany("Users")
                        .HasForeignKey("SectorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Role");

                    b.Navigation("Sector");
                });

            modelBuilder.Entity("linkup_ms.Models.Coder", b =>
                {
                    b.Navigation("CoderLanguageLevels");

                    b.Navigation("CoderSoftSkills");

                    b.Navigation("CoderTechnicalSkillLevels");
                });

            modelBuilder.Entity("linkup_ms.Models.Gender", b =>
                {
                    b.Navigation("Coders");
                });

            modelBuilder.Entity("linkup_ms.Models.Language", b =>
                {
                    b.Navigation("LanguageLevels");
                });

            modelBuilder.Entity("linkup_ms.Models.LanguageLevel", b =>
                {
                    b.Navigation("CoderLanguageLevels");
                });

            modelBuilder.Entity("linkup_ms.Models.Sector", b =>
                {
                    b.Navigation("Users");
                });

            modelBuilder.Entity("linkup_ms.Models.SoftSkill", b =>
                {
                    b.Navigation("CoderSoftSkills");
                });

            modelBuilder.Entity("linkup_ms.Models.TechnicalSkill", b =>
                {
                    b.Navigation("TechnicalSkillLevels");
                });

            modelBuilder.Entity("linkup_ms.Models.TechnicalSkillLevel", b =>
                {
                    b.Navigation("CoderTechnicalSkillLevels");
                });

            modelBuilder.Entity("linkup_ms.Models.UserRole", b =>
                {
                    b.Navigation("Users");
                });
#pragma warning restore 612, 618
        }
    }
}
